|DUT
input_vector[0] => MUX:add_instance.S[0]
input_vector[1] => MUX:add_instance.S[1]
input_vector[2] => MUX:add_instance.I[0]
input_vector[3] => MUX:add_instance.I[1]
input_vector[4] => MUX:add_instance.I[2]
input_vector[5] => MUX:add_instance.I[3]
output_vector[0] << MUX:add_instance.Y


|DUT|MUX:add_instance
I[0] => MUX_2:MUX2.I0
I[1] => MUX_2:MUX2.I1
I[2] => MUX_2:MUX1.I0
I[3] => MUX_2:MUX1.I1
S[0] => MUX_2:MUX1.S
S[0] => MUX_2:MUX2.S
S[1] => MUX_2:OUT_MUX.S
Y <= MUX_2:OUT_MUX.Y


|DUT|MUX:add_instance|MUX_2:MUX1
I1 => AND_2:a1.A
I0 => AND_2:a2.A
S => INVERTER:n1.A
S => AND_2:a1.B
Y <= OR_2:or1.Y


|DUT|MUX:add_instance|MUX_2:MUX1|INVERTER:n1
A => Y.DATAIN
Y <= A.DB_MAX_OUTPUT_PORT_TYPE


|DUT|MUX:add_instance|MUX_2:MUX1|AND_2:a1
A => Y.IN0
B => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|DUT|MUX:add_instance|MUX_2:MUX1|AND_2:a2
A => Y.IN0
B => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|DUT|MUX:add_instance|MUX_2:MUX1|OR_2:or1
A => Y.IN0
B => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|DUT|MUX:add_instance|MUX_2:MUX2
I1 => AND_2:a1.A
I0 => AND_2:a2.A
S => INVERTER:n1.A
S => AND_2:a1.B
Y <= OR_2:or1.Y


|DUT|MUX:add_instance|MUX_2:MUX2|INVERTER:n1
A => Y.DATAIN
Y <= A.DB_MAX_OUTPUT_PORT_TYPE


|DUT|MUX:add_instance|MUX_2:MUX2|AND_2:a1
A => Y.IN0
B => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|DUT|MUX:add_instance|MUX_2:MUX2|AND_2:a2
A => Y.IN0
B => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|DUT|MUX:add_instance|MUX_2:MUX2|OR_2:or1
A => Y.IN0
B => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|DUT|MUX:add_instance|MUX_2:OUT_MUX
I1 => AND_2:a1.A
I0 => AND_2:a2.A
S => INVERTER:n1.A
S => AND_2:a1.B
Y <= OR_2:or1.Y


|DUT|MUX:add_instance|MUX_2:OUT_MUX|INVERTER:n1
A => Y.DATAIN
Y <= A.DB_MAX_OUTPUT_PORT_TYPE


|DUT|MUX:add_instance|MUX_2:OUT_MUX|AND_2:a1
A => Y.IN0
B => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|DUT|MUX:add_instance|MUX_2:OUT_MUX|AND_2:a2
A => Y.IN0
B => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|DUT|MUX:add_instance|MUX_2:OUT_MUX|OR_2:or1
A => Y.IN0
B => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


